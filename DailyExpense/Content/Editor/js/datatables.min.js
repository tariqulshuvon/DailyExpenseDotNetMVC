
/*!
 Buttons for DataTables 1.5.1
 ©2016-2017 SpryMedia Ltd - datatables.net/license
*/
(function (d) { "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (o) { return d(o, window, document) }) : "object" === typeof exports ? module.exports = function (o, n) { o || (o = window); if (!n || !n.fn.dataTable) n = require("datatables.net")(o, n).$; return d(n, o, o.document) } : d(jQuery, window, document) })(function (d, o, n, l) {
    var i = d.fn.dataTable, x = 0, y = 0, j = i.ext.buttons, m = function (a, b) {
        "undefined" === typeof b && (b = {}); !0 === b && (b = {}); d.isArray(b) && (b = { buttons: b }); this.c = d.extend(!0, {}, m.defaults, b);
        b.buttons && (this.c.buttons = b.buttons); this.s = { dt: new i.Api(a), buttons: [], listenKeys: "", namespace: "dtb" + x++ }; this.dom = { container: d("<" + this.c.dom.container.tag + "/>").addClass(this.c.dom.container.className) }; this._constructor()
    }; d.extend(m.prototype, {
        action: function (a, b) { var c = this._nodeToButton(a); if (b === l) return c.conf.action; c.conf.action = b; return this }, active: function (a, b) {
            var c = this._nodeToButton(a), e = this.c.dom.button.active, c = d(c.node); if (b === l) return c.hasClass(e); c.toggleClass(e, b === l ? !0 :
            b); return this
        }, add: function (a, b) { var c = this.s.buttons; if ("string" === typeof b) { for (var e = b.split("-"), c = this.s, d = 0, g = e.length - 1; d < g; d++) c = c.buttons[1 * e[d]]; c = c.buttons; b = 1 * e[e.length - 1] } this._expandButton(c, a, !1, b); this._draw(); return this }, container: function () { return this.dom.container }, disable: function (a) { a = this._nodeToButton(a); d(a.node).addClass(this.c.dom.button.disabled); return this }, destroy: function () {
            d("body").off("keyup." + this.s.namespace); var a = this.s.buttons.slice(), b, c; b = 0; for (c = a.length; b <
            c; b++) this.remove(a[b].node); this.dom.container.remove(); a = this.s.dt.settings()[0]; b = 0; for (c = a.length; b < c; b++) if (a.inst === this) { a.splice(b, 1); break } return this
        }, enable: function (a, b) { if (!1 === b) return this.disable(a); var c = this._nodeToButton(a); d(c.node).removeClass(this.c.dom.button.disabled); return this }, name: function () { return this.c.name }, node: function (a) { a = this._nodeToButton(a); return d(a.node) }, processing: function (a, b) {
            var c = this._nodeToButton(a); if (b === l) return d(c.node).hasClass("processing");
            d(c.node).toggleClass("processing", b); return this
        }, remove: function (a) { var b = this._nodeToButton(a), c = this._nodeToHost(a), e = this.s.dt; if (b.buttons.length) for (var h = b.buttons.length - 1; 0 <= h; h--) this.remove(b.buttons[h].node); b.conf.destroy && b.conf.destroy.call(e.button(a), e, d(a), b.conf); this._removeKey(b.conf); d(b.node).remove(); a = d.inArray(b, c); c.splice(a, 1); return this }, text: function (a, b) {
            var c = this._nodeToButton(a), e = this.c.dom.collection.buttonLiner, e = c.inCollection && e && e.tag ? e.tag : this.c.dom.buttonLiner.tag,
            h = this.s.dt, g = d(c.node), f = function (a) { return "function" === typeof a ? a(h, g, c.conf) : a }; if (b === l) return f(c.conf.text); c.conf.text = b; e ? g.children(e).html(f(b)) : g.html(f(b)); return this
        }, _constructor: function () {
            var a = this, b = this.s.dt, c = b.settings()[0], e = this.c.buttons; c._buttons || (c._buttons = []); c._buttons.push({ inst: this, name: this.c.name }); for (var c = 0, h = e.length; c < h; c++) this.add(e[c]); b.on("destroy", function () { a.destroy() }); d("body").on("keyup." + this.s.namespace, function (b) {
                if (!n.activeElement || n.activeElement ===
                n.body) { var c = String.fromCharCode(b.keyCode).toLowerCase(); a.s.listenKeys.toLowerCase().indexOf(c) !== -1 && a._keypress(c, b) }
            })
        }, _addKey: function (a) { a.key && (this.s.listenKeys += d.isPlainObject(a.key) ? a.key.key : a.key) }, _draw: function (a, b) { a || (a = this.dom.container, b = this.s.buttons); a.children().detach(); for (var c = 0, e = b.length; c < e; c++) a.append(b[c].inserter), a.append(" "), b[c].buttons && b[c].buttons.length && this._draw(b[c].collection, b[c].buttons) }, _expandButton: function (a, b, c, e) {
            for (var h = this.s.dt, g = 0,
            b = !d.isArray(b) ? [b] : b, f = 0, q = b.length; f < q; f++) { var k = this._resolveExtends(b[f]); if (k) if (d.isArray(k)) this._expandButton(a, k, c, e); else { var p = this._buildButton(k, c); if (p) { e !== l ? (a.splice(e, 0, p), e++) : a.push(p); if (p.conf.buttons) { var u = this.c.dom.collection; p.collection = d("<" + u.tag + "/>").addClass(u.className).attr("role", "menu"); p.conf._collection = p.collection; this._expandButton(p.buttons, p.conf.buttons, !0, e) } k.init && k.init.call(h.button(p.node), h, d(p.node), k); g++ } } }
        }, _buildButton: function (a, b) {
            var c =
            this.c.dom.button, e = this.c.dom.buttonLiner, h = this.c.dom.collection, g = this.s.dt, f = function (b) { return "function" === typeof b ? b(g, k, a) : b }; b && h.button && (c = h.button); b && h.buttonLiner && (e = h.buttonLiner); if (a.available && !a.available(g, a)) return !1; var q = function (a, b, c, e) { e.action.call(b.button(c), a, b, c, e); d(b.table().node()).triggerHandler("buttons-action.dt", [b.button(c), b, c, e]) }, k = d("<" + c.tag + "/>").addClass(c.className).attr("tabindex", this.s.dt.settings()[0].iTabIndex).attr("aria-controls", this.s.dt.table().node().id).on("click.dtb",
            function (b) { b.preventDefault(); !k.hasClass(c.disabled) && a.action && q(b, g, k, a); k.blur() }).on("keyup.dtb", function (b) { b.keyCode === 13 && !k.hasClass(c.disabled) && a.action && q(b, g, k, a) }); "a" === c.tag.toLowerCase() && k.attr("href", "#"); e.tag ? (h = d("<" + e.tag + "/>").html(f(a.text)).addClass(e.className), "a" === e.tag.toLowerCase() && h.attr("href", "#"), k.append(h)) : k.html(f(a.text)); !1 === a.enabled && k.addClass(c.disabled); a.className && k.addClass(a.className); a.titleAttr && k.attr("title", f(a.titleAttr)); a.attr && k.attr(a.attr);
            a.namespace || (a.namespace = ".dt-button-" + y++); e = (e = this.c.dom.buttonContainer) && e.tag ? d("<" + e.tag + "/>").addClass(e.className).append(k) : k; this._addKey(a); return { conf: a, node: k.get(0), inserter: e, buttons: [], inCollection: b, collection: null }
        }, _nodeToButton: function (a, b) { b || (b = this.s.buttons); for (var c = 0, e = b.length; c < e; c++) { if (b[c].node === a) return b[c]; if (b[c].buttons.length) { var d = this._nodeToButton(a, b[c].buttons); if (d) return d } } }, _nodeToHost: function (a, b) {
            b || (b = this.s.buttons); for (var c = 0, e = b.length; c <
            e; c++) { if (b[c].node === a) return b; if (b[c].buttons.length) { var d = this._nodeToHost(a, b[c].buttons); if (d) return d } }
        }, _keypress: function (a, b) {
            if (!b._buttonsHandled) {
                var c = function (e) {
                    for (var h = 0, g = e.length; h < g; h++) {
                        var f = e[h].conf, q = e[h].node; if (f.key) if (f.key === a) b._buttonsHandled = !0, d(q).click(); else if (d.isPlainObject(f.key) && f.key.key === a && (!f.key.shiftKey || b.shiftKey)) if (!f.key.altKey || b.altKey) if (!f.key.ctrlKey || b.ctrlKey) if (!f.key.metaKey || b.metaKey) b._buttonsHandled = !0, d(q).click(); e[h].buttons.length &&
                        c(e[h].buttons)
                    }
                }; c(this.s.buttons)
            }
        }, _removeKey: function (a) { if (a.key) { var b = d.isPlainObject(a.key) ? a.key.key : a.key, a = this.s.listenKeys.split(""), b = d.inArray(b, a); a.splice(b, 1); this.s.listenKeys = a.join("") } }, _resolveExtends: function (a) {
            for (var b = this.s.dt, c, e, h = function (c) {
            for (var e = 0; !d.isPlainObject(c) && !d.isArray(c) ;) {
            if (c === l) return; if ("function" === typeof c) { if (c = c(b, a), !c) return !1 } else if ("string" === typeof c) { if (!j[c]) throw "Unknown button type: " + c; c = j[c] } e++; if (30 < e) throw "Buttons: Too many iterations";
            } return d.isArray(c) ? c : d.extend({}, c)
            }, a = h(a) ; a && a.extend;) {
                if (!j[a.extend]) throw "Cannot extend unknown button type: " + a.extend; var g = h(j[a.extend]); if (d.isArray(g)) return g; if (!g) return !1; c = g.className; a = d.extend({}, g, a); c && a.className !== c && (a.className = c + " " + a.className); var f = a.postfixButtons; if (f) { a.buttons || (a.buttons = []); c = 0; for (e = f.length; c < e; c++) a.buttons.push(f[c]); a.postfixButtons = null } if (f = a.prefixButtons) {
                    a.buttons || (a.buttons = []); c = 0; for (e = f.length; c < e; c++) a.buttons.splice(c, 0, f[c]);
                    a.prefixButtons = null
                } a.extend = g.extend
            } return a
        }
    }); m.background = function (a, b, c) { c === l && (c = 400); a ? d("<div/>").addClass(b).css("display", "none").appendTo("body").fadeIn(c) : d("body > div." + b).fadeOut(c, function () { d(this).removeClass(b).remove() }) }; m.instanceSelector = function (a, b) {
        if (!a) return d.map(b, function (a) { return a.inst }); var c = [], e = d.map(b, function (a) { return a.name }), h = function (a) {
            if (d.isArray(a)) for (var f = 0, q = a.length; f < q; f++) h(a[f]); else "string" === typeof a ? -1 !== a.indexOf(",") ? h(a.split(",")) :
            (a = d.inArray(d.trim(a), e), -1 !== a && c.push(b[a].inst)) : "number" === typeof a && c.push(b[a].inst)
        }; h(a); return c
    }; m.buttonSelector = function (a, b) {
        for (var c = [], e = function (a, b, c) { for (var d, f, h = 0, g = b.length; h < g; h++) if (d = b[h]) f = c !== l ? c + h : h + "", a.push({ node: d.node, name: d.conf.name, idx: f }), d.buttons && e(a, d.buttons, f + "-") }, h = function (a, b) {
        var f, g, i = []; e(i, b.s.buttons); f = d.map(i, function (a) { return a.node }); if (d.isArray(a) || a instanceof d) { f = 0; for (g = a.length; f < g; f++) h(a[f], b) } else if (null === a || a === l || "*" === a) {
        f = 0;
        for (g = i.length; f < g; f++) c.push({ inst: b, node: i[f].node })
        } else if ("number" === typeof a) c.push({ inst: b, node: b.s.buttons[a].node }); else if ("string" === typeof a) if (-1 !== a.indexOf(",")) { i = a.split(","); f = 0; for (g = i.length; f < g; f++) h(d.trim(i[f]), b) } else if (a.match(/^\d+(\-\d+)*$/)) f = d.map(i, function (a) { return a.idx }), c.push({ inst: b, node: i[d.inArray(a, f)].node }); else if (-1 !== a.indexOf(":name")) { var j = a.replace(":name", ""); f = 0; for (g = i.length; f < g; f++) i[f].name === j && c.push({ inst: b, node: i[f].node }) } else d(f).filter(a).each(function () {
        c.push({
            inst: b,
            node: this
        })
        }); else "object" === typeof a && a.nodeName && (i = d.inArray(a, f), -1 !== i && c.push({ inst: b, node: f[i] }))
        }, g = 0, f = a.length; g < f; g++) h(b, a[g]); return c
    }; m.defaults = { buttons: ["copy", "excel", "csv", "pdf", "print"], name: "main", tabIndex: 0, dom: { container: { tag: "div", className: "dt-buttons" }, collection: { tag: "div", className: "dt-button-collection" }, button: { tag: "button", className: "dt-button", active: "active", disabled: "disabled" }, buttonLiner: { tag: "span", className: "" } } }; m.version = "1.5.1"; d.extend(j, {
        collection: {
            text: function (a) {
                return a.i18n("buttons.collection",
                "Collection")
            }, className: "buttons-collection", action: function (a, b, c, e) {
                var h = d(c).parents("div.dt-button-collection"), a = c.position(), g = d(b.table().container()), f = !1, i = c; h.length && (f = d(".dt-button-collection").position(), i = h, d("body").trigger("click.dtb-collection")); e._collection.addClass(e.collectionLayout).css("display", "none").insertAfter(i).fadeIn(e.fade); h = e._collection.css("position"); f && "absolute" === h ? e._collection.css({ top: f.top, left: f.left }) : "absolute" === h ? (e._collection.css({
                    top: a.top + c.outerHeight(),
                    left: a.left
                }), f = g.offset().top + g.height(), c = a.top + c.outerHeight() + e._collection.outerHeight() - f, f = a.top - e._collection.outerHeight(), f = g.offset().top - f, c > f && e._collection.css("top", a.top - e._collection.outerHeight() - 5), c = a.left + e._collection.outerWidth(), g = g.offset().left + g.width(), c > g && e._collection.css("left", a.left - (c - g))) : (a = e._collection.height() / 2, a > d(o).height() / 2 && (a = d(o).height() / 2), e._collection.css("marginTop", -1 * a)); e.background && m.background(!0, e.backgroundClassName, e.fade); setTimeout(function () {
                    d("div.dt-button-background").on("click.dtb-collection",
                    function () { }); d("body").on("click.dtb-collection", function (a) { var c = d.fn.addBack ? "addBack" : "andSelf"; if (!d(a.target).parents()[c]().filter(e._collection).length) { e._collection.fadeOut(e.fade, function () { e._collection.detach() }); d("div.dt-button-background").off("click.dtb-collection"); m.background(false, e.backgroundClassName, e.fade); d("body").off("click.dtb-collection"); b.off("buttons-action.b-internal") } })
                }, 10); if (e.autoClose) b.on("buttons-action.b-internal", function () { d("div.dt-button-background").click() })
            },
            background: !0, collectionLayout: "", backgroundClassName: "dt-button-background", autoClose: !1, fade: 400, attr: { "aria-haspopup": !0 }
        }, copy: function (a, b) { if (j.copyHtml5) return "copyHtml5"; if (j.copyFlash && j.copyFlash.available(a, b)) return "copyFlash" }, csv: function (a, b) { if (j.csvHtml5 && j.csvHtml5.available(a, b)) return "csvHtml5"; if (j.csvFlash && j.csvFlash.available(a, b)) return "csvFlash" }, excel: function (a, b) {
            if (j.excelHtml5 && j.excelHtml5.available(a, b)) return "excelHtml5"; if (j.excelFlash && j.excelFlash.available(a,
            b)) return "excelFlash"
        }, pdf: function (a, b) { if (j.pdfHtml5 && j.pdfHtml5.available(a, b)) return "pdfHtml5"; if (j.pdfFlash && j.pdfFlash.available(a, b)) return "pdfFlash" }, pageLength: function (a) {
            var a = a.settings()[0].aLengthMenu, b = d.isArray(a[0]) ? a[0] : a, c = d.isArray(a[0]) ? a[1] : a, e = function (a) { return a.i18n("buttons.pageLength", { "-1": "Show all rows", _: "Show %d rows" }, a.page.len()) }; return {
                extend: "collection", text: e, className: "buttons-page-length", autoClose: !0, buttons: d.map(b, function (a, b) {
                    return {
                        text: c[b], className: "button-page-length",
                        action: function (b, c) { c.page.len(a).draw() }, init: function (b, c, d) { var e = this, c = function () { e.active(b.page.len() === a) }; b.on("length.dt" + d.namespace, c); c() }, destroy: function (a, b, c) { a.off("length.dt" + c.namespace) }
                    }
                }), init: function (a, b, c) { var d = this; a.on("length.dt" + c.namespace, function () { d.text(e(a)) }) }, destroy: function (a, b, c) { a.off("length.dt" + c.namespace) }
            }
        }
    }); i.Api.register("buttons()", function (a, b) {
        b === l && (b = a, a = l); this.selector.buttonGroup = a; var c = this.iterator(!0, "table", function (c) {
            if (c._buttons) return m.buttonSelector(m.instanceSelector(a,
            c._buttons), b)
        }, !0); c._groupSelector = a; return c
    }); i.Api.register("button()", function (a, b) { var c = this.buttons(a, b); 1 < c.length && c.splice(1, c.length); return c }); i.Api.registerPlural("buttons().active()", "button().active()", function (a) { return a === l ? this.map(function (a) { return a.inst.active(a.node) }) : this.each(function (b) { b.inst.active(b.node, a) }) }); i.Api.registerPlural("buttons().action()", "button().action()", function (a) {
        return a === l ? this.map(function (a) { return a.inst.action(a.node) }) : this.each(function (b) {
            b.inst.action(b.node,
            a)
        })
    }); i.Api.register(["buttons().enable()", "button().enable()"], function (a) { return this.each(function (b) { b.inst.enable(b.node, a) }) }); i.Api.register(["buttons().disable()", "button().disable()"], function () { return this.each(function (a) { a.inst.disable(a.node) }) }); i.Api.registerPlural("buttons().nodes()", "button().node()", function () { var a = d(); d(this.each(function (b) { a = a.add(b.inst.node(b.node)) })); return a }); i.Api.registerPlural("buttons().processing()", "button().processing()", function (a) {
        return a ===
        l ? this.map(function (a) { return a.inst.processing(a.node) }) : this.each(function (b) { b.inst.processing(b.node, a) })
    }); i.Api.registerPlural("buttons().text()", "button().text()", function (a) { return a === l ? this.map(function (a) { return a.inst.text(a.node) }) : this.each(function (b) { b.inst.text(b.node, a) }) }); i.Api.registerPlural("buttons().trigger()", "button().trigger()", function () { return this.each(function (a) { a.inst.node(a.node).trigger("click") }) }); i.Api.registerPlural("buttons().containers()", "buttons().container()",
    function () { var a = d(), b = this._groupSelector; this.iterator(!0, "table", function (c) { if (c._buttons) for (var c = m.instanceSelector(b, c._buttons), d = 0, h = c.length; d < h; d++) a = a.add(c[d].container()) }); return a }); i.Api.register("button().add()", function (a, b) { var c = this.context; c.length && (c = m.instanceSelector(this._groupSelector, c[0]._buttons), c.length && c[0].add(b, a)); return this.button(this._groupSelector, a) }); i.Api.register("buttons().destroy()", function () {
        this.pluck("inst").unique().each(function (a) { a.destroy() });
        return this
    }); i.Api.registerPlural("buttons().remove()", "buttons().remove()", function () { this.each(function (a) { a.inst.remove(a.node) }); return this }); var r; i.Api.register("buttons.info()", function (a, b, c) {
        var e = this; if (!1 === a) return d("#datatables_buttons_info").fadeOut(function () { d(this).remove() }), clearTimeout(r), r = null, this; r && clearTimeout(r); d("#datatables_buttons_info").length && d("#datatables_buttons_info").remove(); d('<div id="datatables_buttons_info" class="dt-button-info"/>').html(a ? "<h2>" + a +
        "</h2>" : "").append(d("<div/>")["string" === typeof b ? "html" : "append"](b)).css("display", "none").appendTo("body").fadeIn(); c !== l && 0 !== c && (r = setTimeout(function () { e.buttons.info(!1) }, c)); return this
    }); i.Api.register("buttons.exportData()", function (a) {
        if (this.context.length) {
            var b = new i.Api(this.context[0]), c = d.extend(!0, {}, {
                rows: null, columns: "", modifier: { search: "applied", order: "applied" }, orthogonal: "display", stripHtml: !0, stripNewlines: !0, decodeEntities: !0, trim: !0, format: {
                    header: function (a) { return e(a) },
                    footer: function (a) { return e(a) }, body: function (a) { return e(a) }
                }
            }, a), e = function (a) { if ("string" !== typeof a) return a; a = a.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, ""); c.stripHtml && (a = a.replace(/<[^>]*>/g, "")); c.trim && (a = a.replace(/^\s+|\s+$/g, "")); c.stripNewlines && (a = a.replace(/\n/g, " ")); c.decodeEntities && (v.innerHTML = a, a = v.value); return a }, a = b.columns(c.columns).indexes().map(function (a) { var d = b.column(a).header(); return c.format.header(d.innerHTML, a, d) }).toArray(), h = b.table().footer() ?
            b.columns(c.columns).indexes().map(function (a) { var d = b.column(a).footer(); return c.format.footer(d ? d.innerHTML : "", a, d) }).toArray() : null, g = d.extend({}, c.modifier); b.select && "function" === typeof b.select.info && g.selected === l && b.rows(c.rows, d.extend({ selected: !0 }, g)).any() && d.extend(g, { selected: !0 }); for (var g = b.rows(c.rows, g).indexes().toArray(), f = b.cells(g, c.columns), g = f.render(c.orthogonal).toArray(), f = f.nodes().toArray(), j = a.length, k = 0 < j ? g.length / j : 0, m = [k], o = 0, n = 0; n < k; n++) {
                for (var r = [j], s = 0; s < j; s++) r[s] =
                c.format.body(g[o], n, s, f[o]), o++; m[n] = r
            } return { header: a, footer: h, body: m }
        }
    }); i.Api.register("buttons.exportInfo()", function (a) {
        a || (a = {}); var b; var c = a; b = "*" === c.filename && "*" !== c.title && c.title !== l && null !== c.title && "" !== c.title ? c.title : c.filename; "function" === typeof b && (b = b()); b === l || null === b ? b = null : (-1 !== b.indexOf("*") && (b = d.trim(b.replace("*", d("head > title").text()))), b = b.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g, ""), (c = t(c.extension)) || (c = ""), b += c); c = t(a.title); c = null === c ? null : -1 !== c.indexOf("*") ?
        c.replace("*", d("head > title").text() || "Exported data") : c; return { filename: b, title: c, messageTop: w(this, a.message || a.messageTop, "top"), messageBottom: w(this, a.messageBottom, "bottom") }
    }); var t = function (a) { return null === a || a === l ? null : "function" === typeof a ? a() : a }, w = function (a, b, c) { b = t(b); if (null === b) return null; a = d("caption", a.table().container()).eq(0); return "*" === b ? a.css("caption-side") !== c ? null : a.length ? a.text() : "" : b }, v = d("<textarea/>")[0]; d.fn.dataTable.Buttons = m; d.fn.DataTable.Buttons = m; d(n).on("init.dt plugin-init.dt",
    function (a, b) { if ("dt" === a.namespace) { var c = b.oInit.buttons || i.defaults.buttons; c && !b._buttons && (new m(b, c)).container() } }); i.ext.feature.push({ fnInit: function (a) { var a = new i.Api(a), b = a.init().buttons || i.defaults.buttons; return (new m(a, b)).container() }, cFeature: "B" }); return m
});


/*!
 Select for DataTables 1.2.5
 2015-2018 SpryMedia Ltd - datatables.net/license/mit
*/
(function (e) { "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (j) { return e(j, window, document) }) : "object" === typeof exports ? module.exports = function (j, m) { j || (j = window); if (!m || !m.fn.dataTable) m = require("datatables.net")(j, m).$; return e(m, j, j.document) } : e(jQuery, window, document) })(function (e, j, m, h) {
    function v(a, c, b) {
        var d; d = function (b, c) { if (b > c) var d = c, c = b, b = d; var f = !1; return a.columns(":visible").indexes().filter(function (a) { a === b && (f = !0); return a === c ? (f = !1, !0) : f }) }; var f =
        function (b, c) { var d = a.rows({ search: "applied" }).indexes(); if (d.indexOf(b) > d.indexOf(c)) var f = c, c = b, b = f; var e = !1; return d.filter(function (a) { a === b && (e = !0); return a === c ? (e = !1, !0) : e }) }; !a.cells({ selected: !0 }).any() && !b ? (d = d(0, c.column), b = f(0, c.row)) : (d = d(b.column, c.column), b = f(b.row, c.row)); b = a.cells(b, d).flatten(); a.cells(c, { selected: !0 }).any() ? a.cells(b).deselect() : a.cells(b).select()
    } function r(a) {
        var c = a.settings()[0]._select.selector; e(a.table().container()).off("mousedown.dtSelect", c).off("mouseup.dtSelect",
        c).off("click.dtSelect", c); e("body").off("click.dtSelect" + a.table().node().id)
    } function x(a) {
        var c = e(a.table().container()), b = a.settings()[0], d = b._select.selector; c.on("mousedown.dtSelect", d, function (b) { if (b.shiftKey || b.metaKey || b.ctrlKey) c.css("-moz-user-select", "none").one("selectstart.dtSelect", d, function () { return !1 }) }).on("mouseup.dtSelect", d, function () { c.css("-moz-user-select", "") }).on("click.dtSelect", d, function (b) {
            var c = a.select.items(); if (j.getSelection) {
                var d = j.getSelection(); if ((!d.anchorNode ||
                e(d.anchorNode).closest("table")[0] === a.table().node()) && "" !== e.trim(d.toString())) return
            } d = a.settings()[0]; if (e(b.target).closest("div.dataTables_wrapper")[0] == a.table().container()) { var k = a.cell(e(b.target).closest("td, th")); if (k.any()) { var g = e.Event("user-select.dt"); i(a, g, [c, k, b]); g.isDefaultPrevented() || (g = k.index(), "row" === c ? (c = g.row, s(b, a, d, "row", c)) : "column" === c ? (c = k.index().column, s(b, a, d, "column", c)) : "cell" === c && (c = k.index(), s(b, a, d, "cell", c)), d._select_lastCell = g) } }
        }); e("body").on("click.dtSelect" +
        a.table().node().id, function (c) { b._select.blurable && !e(c.target).parents().filter(a.table().container()).length && (0 !== e(c.target).parents("html").length && !e(c.target).parents("div.DTE").length) && p(b, !0) })
    } function i(a, c, b, d) { if (!d || a.flatten().length) "string" === typeof c && (c += ".dt"), b.unshift(a), e(a.table().node()).trigger(c, b) } function y(a) {
        var c = a.settings()[0]; if (c._select.info && c.aanFeatures.i && "api" !== a.select.style()) {
            var b = a.rows({ selected: !0 }).flatten().length, d = a.columns({ selected: !0 }).flatten().length,
            f = a.cells({ selected: !0 }).flatten().length, l = function (b, c, d) { b.append(e('<span class="select-item"/>').append(a.i18n("select." + c + "s", { _: "%d " + c + "s selected", "0": "", 1: "1 " + c + " selected" }, d))) }; e.each(c.aanFeatures.i, function (c, a) { var a = e(a), g = e('<span class="select-info"/>'); l(g, "row", b); l(g, "column", d); l(g, "cell", f); var h = a.children("span.select-info"); h.length && h.remove(); "" !== g.text() && a.append(g) })
        }
    } function z(a, c, b, d) {
        var f = a[c + "s"]({ search: "applied" }).indexes(), d = e.inArray(d, f), l = e.inArray(b,
        f); if (!a[c + "s"]({ selected: !0 }).any() && -1 === d) f.splice(e.inArray(b, f) + 1, f.length); else { if (d > l) var g = l, l = d, d = g; f.splice(l + 1, f.length); f.splice(0, d) } a[c](b, { selected: !0 }).any() ? (f.splice(e.inArray(b, f), 1), a[c + "s"](f).deselect()) : a[c + "s"](f).select()
    } function p(a, c) { if (c || "single" === a._select.style) { var b = new g.Api(a); b.rows({ selected: !0 }).deselect(); b.columns({ selected: !0 }).deselect(); b.cells({ selected: !0 }).deselect() } } function s(a, c, b, d, f) {
        var e = c.select.style(), g = c[d](f, { selected: !0 }).any(); "os" ===
        e ? a.ctrlKey || a.metaKey ? c[d](f).select(!g) : a.shiftKey ? "cell" === d ? v(c, f, b._select_lastCell || null) : z(c, d, f, b._select_lastCell ? b._select_lastCell[d] : null) : (a = c[d + "s"]({ selected: !0 }), g && 1 === a.flatten().length ? c[d](f).deselect() : (a.deselect(), c[d](f).select())) : "multi+shift" == e ? a.shiftKey ? "cell" === d ? v(c, f, b._select_lastCell || null) : z(c, d, f, b._select_lastCell ? b._select_lastCell[d] : null) : c[d](f).select(!g) : c[d](f).select(!g)
    } function q(a, c) { return function (b) { return b.i18n("buttons." + a, c) } } function t(a) {
        a =
        a._eventNamespace; return "draw.dt.DT" + a + " select.dt.DT" + a + " deselect.dt.DT" + a
    } var g = e.fn.dataTable; g.select = {}; g.select.version = "1.2.5"; g.select.init = function (a) {
        var c = a.settings()[0], b = c.oInit.select, d = g.defaults.select, b = b === h ? d : b, d = "row", f = "api", l = !1, w = !0, k = "td, th", j = "selected", i = !1; c._select = {}; if (!0 === b) f = "os", i = !0; else if ("string" === typeof b) f = b, i = !0; else if (e.isPlainObject(b) && (b.blurable !== h && (l = b.blurable), b.info !== h && (w = b.info), b.items !== h && (d = b.items), b.style !== h && (f = b.style, i = !0), b.selector !==
        h && (k = b.selector), b.className !== h)) j = b.className; a.select.selector(k); a.select.items(d); a.select.style(f); a.select.blurable(l); a.select.info(w); c._select.className = j; e.fn.dataTable.ext.order["select-checkbox"] = function (b, c) { return this.api().column(c, { order: "index" }).nodes().map(function (c) { return "row" === b._select.items ? e(c).parent().hasClass(b._select.className) : "cell" === b._select.items ? e(c).hasClass(b._select.className) : !1 }) }; !i && e(a.table().node()).hasClass("selectable") && a.select.style("os")
    };
    e.each([{ type: "row", prop: "aoData" }, { type: "column", prop: "aoColumns" }], function (a, c) { g.ext.selector[c.type].push(function (b, a, f) { var a = a.selected, e, g = []; if (!0 !== a && !1 !== a) return f; for (var k = 0, h = f.length; k < h; k++) e = b[c.prop][f[k]], (!0 === a && !0 === e._select_selected || !1 === a && !e._select_selected) && g.push(f[k]); return g }) }); g.ext.selector.cell.push(function (a, c, b) {
        var c = c.selected, d, f = []; if (c === h) return b; for (var e = 0, g = b.length; e < g; e++) d = a.aoData[b[e].row], (!0 === c && d._selected_cells && !0 === d._selected_cells[b[e].column] ||
        !1 === c && (!d._selected_cells || !d._selected_cells[b[e].column])) && f.push(b[e]); return f
    }); var n = g.Api.register, o = g.Api.registerPlural; n("select()", function () { return this.iterator("table", function (a) { g.select.init(new g.Api(a)) }) }); n("select.blurable()", function (a) { return a === h ? this.context[0]._select.blurable : this.iterator("table", function (c) { c._select.blurable = a }) }); n("select.info()", function (a) { return y === h ? this.context[0]._select.info : this.iterator("table", function (c) { c._select.info = a }) }); n("select.items()",
    function (a) { return a === h ? this.context[0]._select.items : this.iterator("table", function (c) { c._select.items = a; i(new g.Api(c), "selectItems", [a]) }) }); n("select.style()", function (a) {
        return a === h ? this.context[0]._select.style : this.iterator("table", function (c) {
            c._select.style = a; if (!c._select_init) {
                var b = new g.Api(c); c.aoRowCreatedCallback.push({
                    fn: function (b, a, d) {
                        a = c.aoData[d]; a._select_selected && e(b).addClass(c._select.className); b = 0; for (d = c.aoColumns.length; b < d; b++) (c.aoColumns[b]._select_selected || a._selected_cells &&
                        a._selected_cells[b]) && e(a.anCells[b]).addClass(c._select.className)
                    }, sName: "select-deferRender"
                }); b.on("preXhr.dt.dtSelect", function () { var c = b.rows({ selected: !0 }).ids(!0).filter(function (b) { return b !== h }), a = b.cells({ selected: !0 }).eq(0).map(function (a) { var c = b.row(a.row).id(!0); return c ? { row: c, column: a.column } : h }).filter(function (b) { return b !== h }); b.one("draw.dt.dtSelect", function () { b.rows(c).select(); a.any() && a.each(function (a) { b.cells(a.row, a.column).select() }) }) }); b.on("draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt",
                function () { y(b) }); b.on("destroy.dtSelect", function () { r(b); b.off(".dtSelect") })
            } var d = new g.Api(c); r(d); "api" !== a && x(d); i(new g.Api(c), "selectStyle", [a])
        })
    }); n("select.selector()", function (a) { return a === h ? this.context[0]._select.selector : this.iterator("table", function (c) { r(new g.Api(c)); c._select.selector = a; "api" !== c._select.style && x(new g.Api(c)) }) }); o("rows().select()", "row().select()", function (a) {
        var c = this; if (!1 === a) return this.deselect(); this.iterator("row", function (b, a) {
            p(b); b.aoData[a]._select_selected =
            !0; e(b.aoData[a].nTr).addClass(b._select.className)
        }); this.iterator("table", function (b, a) { i(c, "select", ["row", c[a]], !0) }); return this
    }); o("columns().select()", "column().select()", function (a) {
        var c = this; if (!1 === a) return this.deselect(); this.iterator("column", function (b, a) { p(b); b.aoColumns[a]._select_selected = !0; var c = (new g.Api(b)).column(a); e(c.header()).addClass(b._select.className); e(c.footer()).addClass(b._select.className); c.nodes().to$().addClass(b._select.className) }); this.iterator("table",
        function (b, a) { i(c, "select", ["column", c[a]], !0) }); return this
    }); o("cells().select()", "cell().select()", function (a) { var c = this; if (!1 === a) return this.deselect(); this.iterator("cell", function (b, a, c) { p(b); a = b.aoData[a]; a._selected_cells === h && (a._selected_cells = []); a._selected_cells[c] = !0; a.anCells && e(a.anCells[c]).addClass(b._select.className) }); this.iterator("table", function (a, d) { i(c, "select", ["cell", c[d]], !0) }); return this }); o("rows().deselect()", "row().deselect()", function () {
        var a = this; this.iterator("row",
        function (a, b) { a.aoData[b]._select_selected = !1; e(a.aoData[b].nTr).removeClass(a._select.className) }); this.iterator("table", function (c, b) { i(a, "deselect", ["row", a[b]], !0) }); return this
    }); o("columns().deselect()", "column().deselect()", function () {
        var a = this; this.iterator("column", function (a, b) {
            a.aoColumns[b]._select_selected = !1; var d = new g.Api(a), f = d.column(b); e(f.header()).removeClass(a._select.className); e(f.footer()).removeClass(a._select.className); d.cells(null, b).indexes().each(function (b) {
                var d =
                a.aoData[b.row], f = d._selected_cells; d.anCells && (!f || !f[b.column]) && e(d.anCells[b.column]).removeClass(a._select.className)
            })
        }); this.iterator("table", function (c, b) { i(a, "deselect", ["column", a[b]], !0) }); return this
    }); o("cells().deselect()", "cell().deselect()", function () {
        var a = this; this.iterator("cell", function (a, b, d) { b = a.aoData[b]; b._selected_cells[d] = !1; b.anCells && !a.aoColumns[d]._select_selected && e(b.anCells[d]).removeClass(a._select.className) }); this.iterator("table", function (c, b) {
            i(a, "deselect",
            ["cell", a[b]], !0)
        }); return this
    }); var u = 0; e.extend(g.ext.buttons, {
        selected: {
            text: q("selected", "Selected"), className: "buttons-selected", limitTo: ["rows", "columns", "cells"], init: function (a, c, b) { var d = this; b._eventNamespace = ".select" + u++; a.on(t(b), function () { d.enable(-1 !== e.inArray("rows", b.limitTo) && a.rows({ selected: !0 }).any() || -1 !== e.inArray("columns", b.limitTo) && a.columns({ selected: !0 }).any() || -1 !== e.inArray("cells", b.limitTo) && a.cells({ selected: !0 }).any() ? !0 : !1) }); this.disable() }, destroy: function (a,
            c, b) { a.off(b._eventNamespace) }
        }, selectedSingle: { text: q("selectedSingle", "Selected single"), className: "buttons-selected-single", init: function (a, c, b) { var d = this; b._eventNamespace = ".select" + u++; a.on(t(b), function () { var b = a.rows({ selected: !0 }).flatten().length + a.columns({ selected: !0 }).flatten().length + a.cells({ selected: !0 }).flatten().length; d.enable(1 === b) }); this.disable() }, destroy: function (a, c, b) { a.off(b._eventNamespace) } }, selectAll: {
            text: q("selectAll", "Select all"), className: "buttons-select-all", action: function () {
                this[this.select.items() +
                "s"]().select()
            }
        }, selectNone: { text: q("selectNone", "Deselect all"), className: "buttons-select-none", action: function () { p(this.settings()[0], !0) }, init: function (a, c, b) { var d = this; b._eventNamespace = ".select" + u++; a.on(t(b), function () { var b = a.rows({ selected: !0 }).flatten().length + a.columns({ selected: !0 }).flatten().length + a.cells({ selected: !0 }).flatten().length; d.enable(0 < b) }); this.disable() }, destroy: function (a, c, b) { a.off(b._eventNamespace) } }
    }); e.each(["Row", "Column", "Cell"], function (a, c) {
        var b = c.toLowerCase();
        g.ext.buttons["select" + c + "s"] = { text: q("select" + c + "s", "Select " + b + "s"), className: "buttons-select-" + b + "s", action: function () { this.select.items(b) }, init: function (a) { var c = this; a.on("selectItems.dt.DT", function (a, d, e) { c.active(e === b) }) } }
    }); e(m).on("preInit.dt.dtSelect", function (a, c) { "dt" === a.namespace && g.select.init(new g.Api(c)) }); return g.select
});


